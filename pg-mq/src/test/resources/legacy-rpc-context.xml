<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans default-lazy-init="false" xmlns:p="http://www.springframework.org/schema/p"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.4.xsd">

	<!-- 测试的环境配置 -->	
	<bean id="env" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations" value="#{systemProperties['env.files'] ?: 'classpath:/dev/*.properties'}"/>
	</bean>

	<!-- RabbitMQ连接池 -->
 	<task:executor id="amqpConnectionTaskExecutor" pool-size="#{env['mqConnRecvThreads']?:1}"/>
	
	<rabbit:connection-factory id="rabbitConnectionFactory" channel-cache-size="#{env['mqChannelCacheSize']?:10}" executor="amqpConnectionTaskExecutor" addresses="#{env['mqAddresses']}" virtual-host="#{env['mqVHost']?:'/dev'}" username="#{env['mqUser']?:'admin'}" password="#{env['mqPassword']?:'admin'}"/>
	
	<!-- 标准的建立Queue的参数 -->
	<rabbit:queue-arguments id="amqpQueueArguments">
		<!-- 暂时没有 -->
	</rabbit:queue-arguments>
	
	<!-- 固定响应队列 -->
	<rabbit:queue queue-arguments="amqpQueueArguments" id="amqpTemplateReplyQueue"/>
	
	<bean id="messageConverter" class="org.springframework.amqp.support.converter.SimpleMessageConverter"/>
	
	<!-- 新版spring-rabbit中，不会默认指定一个spring_reply_correlation的header，为了向下兼容，需要手工指定一个 -->
	<!-- 同时出于性能考虑，不推荐使用固定队列配置，而要使用RabbitMQ 3.4+支持的fast replay机制，表现在配置上，就是相当于使用基本的临时队列配置 -->
	<!-- 由于基础库里的bug(1.4.5还存在)，这里也必须指定correlationKey。 -->
	<rabbit:template id="amqpTemplate" 
		connection-factory="rabbitConnectionFactory"
		reply-timeout="#{env['mqRPCTimeout']?:30000}"
		message-converter="messageConverter"
		reply-queue="amqpTemplateReplyQueue"
		correlation-key="spring_reply_correlation">
		<rabbit:reply-listener concurrency="2"/>
	</rabbit:template>
	
	<!-- 供自动创建队列 -->
	<rabbit:admin connection-factory="rabbitConnectionFactory"/>
	
	<!-- 队列列表，没有就自动创建 -->
	<rabbit:queue queue-arguments="amqpQueueArguments" id="serviceQueue" name="pg.mq.test" />

	<!-- 测试服务端 -->
	<bean id="serviceExporter" class="net.engining.pg.mq.config.AmqpInvokerServiceExporter">
		<property name="amqpTemplate" ref="amqpTemplate" />
		<property name="service">
			<bean class="net.engining.pg.mq.test.GreetingsImpl"/>
		</property>
		<property name="serviceInterface" value="net.engining.pg.mq.test.GreetingsApi"/>
	</bean>
	
	<!-- 测试客户端 -->
	<bean id="serviceClient" class="net.engining.pg.mq.config.AmqpInvokerClientFactoryBean">
		<property name="amqpTemplate" ref="amqpTemplate"/>
		<property name="serviceInterface" value="net.engining.pg.mq.test.GreetingsApi"/>
		<property name="queueName" value="pg.mq.test"/>
	</bean>
	
	<rabbit:listener-container requeue-rejected="false" concurrency="#{env['mqServiceConcurrency']?:10}" message-converter="messageConverter">
		<rabbit:listener queues="serviceQueue" ref="serviceExporter" />
	</rabbit:listener-container>
	
</beans>